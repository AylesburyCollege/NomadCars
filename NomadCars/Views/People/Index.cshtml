@model PagedList.IPagedList<NomadCars.Models.Person>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.Title = "Staff and Customers";
}
<header class="jumbotron">
    <h1>Nomad Cars : Staff Portal</h1>
    <h2>Staff and Customers</h2>

</header>

<p>
    @Html.ActionLink("Add New Person", "Create", null, new { @class = "btn btn-primary btn-large" })
</p>

@using (Html.BeginForm())
{
    <p>
        Find by Last Name: @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm})
        </th>
        <th>
            First Name
        </th>
        <th>
            Home Phone Number
        </th>
        <th>
            Mobile Phone Number
        </th>
        <th>
            E-Mail Address
        </th>
        <th>
            @Html.ActionLink("Date of Birth", "Index", new { sortOrder = ViewBag.DateSortParm})
        </th>
        <th>
            Marital Status
        </th>
        <th>
            Customer?
        </th>
        <th>
            Staff?
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HomePhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MobilePhoneNumber)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DateOfBirth)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.MaritalStatus)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsCustomer)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsStaff)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.PersonID }, new { @class = "btn btn-success" })
            @Html.ActionLink("Details", "Details", new { id=item.PersonID }, new { @class = "btn btn-info" })
            @Html.ActionLink("Delete", "Delete", new { id=item.PersonID }, new { @class = "btn btn-danger" })
        </td>
    </tr>
}

</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))